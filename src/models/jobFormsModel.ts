import mongoose, { Schema } from "mongoose";

export interface IJobForm {
    id?: string,
    job: string,
    paidMediaBrief: {
        email: string,
        brandName: string,
        brandWebsite: string,
        companyBackground: string,
        brandValues: string,
        brandPropositionToCustomers: string,
        brandGoals: string,
        paidMediaGoals: string,
        toneOfVoice: string,
        customerValue: string,
        audienceIdentity: string,
        audienceAge: Number,
        ineterestsAndHobbies: string,
        audienceTargeting: [string],
        informationConsumption: string,
        publicIdentity: string,
        brandPreferences: string,
        competitorBrands: string,
        differenceFromCompetitor: string,
        customerBrandFeeling: string,
        customerBrandThoughts: string,
        customerBrandAct: string,
        budget: Number,
        timeframe: Date,
        pointOfContact: string,
        activityDates: string,
        activityDatesBudget: Number,
        accessToAnalyticsAndPaidMediaAccounts: boolean,
        channelSelection: [string],
        channelGoals: string,
        taggingForTracking: string,
        thirdPartyToolsAndApplications: string,
        locationTargeting: string,
        emailDatabaseLists: boolean,
        brandUSP: string,
        brandExperience: string,
        painPoints: string,
        customerGroups: string,
        exclusiveOffers: string,
        customerRetention: string,
        additionalInformation: string
    },
    creativeProjectBrief: {
        projectName: string,
        workingOnProject: [string],
        projectOverview: string,
        reviewDate: Date,
        liveDate: Date,
        outputRequired: string,
        outputDescription: string,
        referenceFiles: [string],
        projectBudget: Number,
        additionalInformation: string
    },
    brandIdentityBrief: {
        brandStory: string,
        brandCore: string,
        brandStrength: string,
        brandWeakness: string,
        brandDifferentiators: string,
        brandPositioning: string,
        brandVision: string,
        brandMission: string,
        brandValue: string,
        brandImage: string,
        brandPersonality: string,
        brandVoice: string,
        brand10IndividualWords: string,
        targetAudience: string,
        targetAudienceMotivations: string,
        brandMainCompetitors: string,
        competitorsAwareOfActions: string,
        brandFutureVision: string,
        marketDesiredPositioning: string,
        keyChallenges: string,
        keyCommercialObjectives: string,
        brandingDeliverables: string,
        brandGuidlines: string,
        existingBrandGuidelines: string,
        additionalInfo: string,
        budget: Number,
        delievryDate: Date
    },
    websiteBriefing: {
        email: string,
        websitePurpose: string,
        websiteAspectsLove: string,
        websiteAspectsHate: string,
        websiteRemovedAspects: string,
        websiteMustStayAspects: string,
        productsOrServicesPerLocation: string,
        businessUVP: string,
        servicesHighlighted: string,
        websiteVisitorsReason: string,
        websiteEasyNavigate: string,
        visitorsToSales: string,
        competitorsWebsitesUpdates: string,
        contentDeliverRightMessage: string,
        websiteGoodBusinessRepresentation: string,
        websiteInstillTrustAndConfidence: string,
        websiteEastToUpdate: string,
        trackedVisitors: string,
        toolsAndAppsToRunWebsite: string,
        newWebsite: string,
        proposedSitemapPrepared: string,
        idealWebsite: string,
        websiteSpecificGoals: string,
        goalsAchievemnetPace: string,
        websiteNewFeatures: string,
        projectSuccessQualification: string,
        standApartFeatures: string,
        onlineActivityModel: string,
        top7Competitors: string,
        competitorsLikedFeatures: string,
        competitorsHatedFeatures: string,
        likedWebsitesExamples: string,
        websiteContentUpdateFrequency: string,
        neededFunctionalRequirements: string,
        specificFeatureNeeded: string,
        usersContentInteractions: string,
        websiteChatOptions: string,
        websiteInternalSearchEngine: string,
        audioOrVideoOptions: string,
        videoHostingOptions: string,
        sellThroughWebsite: string,
        websiteAudienceCommunication: string,
        necessaryFeaturesForAudienceIncluded: string,
        websiteEasyNavigation: string,
        StructureAndDigestibleInformationWhiteSpace: string,
        colorThemeRelevancy: string,
        copyEffectiveness: string,
        websiteDistractions: string,
        CTAEvident: string,
        websiteChanges: string,
        FeaturesAndFunctionsToAdd: string,
        websiteSuggestions: string,
        newWebsiteElementsDesign: string
    }
}

const jobFormSchema: Schema = new Schema({
    job: {
        type: mongoose.Schema.Types.ObjectId,
        ref: 'job',
        required: true
    },
    paidMediaBrief: {
        email: String,
        brandName: String,
        brandWebsite: String,
        companyBackground: String,
        brandValues: String,
        brandPropositionToCustomers: String,
        brandGoals: String,
        paidMediaGoals: String,
        toneOfVoice: String,
        customerValue: String,
        audienceIdentity: String,
        audienceAge: Number,
        ineterestsAndHobbies: String,
        audienceTargeting: [String],
        informationConsumption: String,
        publicIdentity: String,
        brandPreferences: String,
        competitorBrands: String,
        differenceFromCompetitor: String,
        customerBrandFeeling: String,
        customerBrandThoughts: String,
        customerBrandAct: String,
        budget: Number,
        timeframe: Date,
        pointOfContact: String,
        activityDates: String,
        activityDatesBudget: Number,
        accessToAnalyticsAndPaidMediaAccounts: {
            type: Boolean,
            default: false
        },
        channelSelection: [String],
        channelGoals: String,
        taggingForTracking: String,
        thirdPartyToolsAndApplications: String,
        locationTargeting: String,
        emailDatabaseLists: {
            type: Boolean,
            default: false
        },
        brandUSP: String,
        brandExperience: String,
        painPoints: String,
        customerGroups: String,
        exclusiveOffers: String,
        customerRetention: String,
        additionalInformation: String
    },
    crativeProjectBrief: {
        projectName: String,
        workingOnProject: [String],
        projectOverview: String,
        reviewDate: Date,
        liveDate: Date,
        outputRequired: String,
        outputDescription: String,
        referenceFiles: [String],
        projectBudget: Number,
        additionalInformation: String
    },
    brandIdentityBrief: {
        brandStory: String,
        brandCore: String,
        brandStrength: String,
        brandWeakness: String,
        brandDifferentiators: String,
        brandPositioning: String,
        brandVision: String,
        brandMission: String,
        brandValue: String,
        brandImage: String,
        brandPersonality: String,
        brandVoice: String,
        brand10IndividualWords: String,
        targetAudience: String,
        targetAudienceMotivations: String,
        brandMainCompetitors: String,
        competitorsAwareOfActions: String,
        brandFutureVision: String,
        marketDesiredPositioning: String,
        keyChallenges: String,
        keyCommercialObjectives: String,
        brandingDeliverables: String,
        brandGuidlines: String,
        existingBrandGuidelines: String,
        additionalInfo: String,
        budget: Number,
        delievryDate: Date
    },
    websiteBriefing: {
        email: String,
        websitePurpose: String,
        websiteAspectsLove: String,
        websiteAspectsHate: String,
        websiteRemovedAspects: String,
        websiteMustStayAspects: String,
        productsOrServicesPerLocation: String,
        businessUVP: String,
        servicesHighlighted: String,
        websiteVisitorsReason: String,
        websiteEasyNavigate: String,
        visitorsToSales: String,
        competitorsWebsitesUpdates: String,
        contentDeliverRightMessage: String,
        websiteGoodBusinessRepresentation: String,
        websiteInstillTrustAndConfidence: String,
        websiteEastToUpdate: String,
        trackedVisitors: String,
        toolsAndAppsToRunWebsite: String,
        newWebsite: String,
        proposedSitemapPrepared: String,
        idealWebsite: String,
        websiteSpecificGoals: String,
        goalsAchievemnetPace: String,
        websiteNewFeatures: String,
        projectSuccessQualification: String,
        standApartFeatures: String,
        onlineActivityModel: String,
        top7Competitors: String,
        competitorsLikedFeatures: String,
        competitorsHatedFeatures: String,
        likedWebsitesExamples: String,
        websiteContentUpdateFrequency: String,
        neededFunctionalRequirements: String,
        specificFeatureNeeded: String,
        usersContentInteractions: String,
        websiteChatOptions: String,
        websiteInternalSearchEngine: String,
        audioOrVideoOptions: String,
        videoHostingOptions: String,
        sellThroughWebsite: String,
        websiteAudienceCommunication: String,
        necessaryFeaturesForAudienceIncluded: String,
        websiteEasyNavigation: String,
        StructureAndDigestibleInformationWhiteSpace: String,
        colorThemeRelevancy: String,
        copyEffectiveness: String,
        websiteDistractions: String,
        CTAEvident: String,
        websiteChanges: String,
        FeaturesAndFunctionsToAdd: String,
        websiteSuggestions: String,
        newWebsiteElementsDesign: String
    }
});

export const jobFormsAgent = mongoose.model<IJobForm>('jobform', jobFormSchema);